Here’s a complete, runnable inventory with exact commands.

### Workspace-level
- Build (release, all crates/targets)
```bash
cargo build --workspace --release --all-targets
```
- Tests (release, all crates/features, no fail-fast)
```bash
cargo test --workspace --release --all-features --no-fail-fast
cargo test --workspace --release --no-default-features --no-fail-fast
```
- Lints/format
```bash
cargo +stable fmt -- --check
cargo clippy --workspace --all-targets --all-features -D warnings -W clippy::pedantic -W clippy::nursery -W clippy::cargo
```
- Docs (optional)
```bash
cargo doc --workspace --no-deps
```

### Examples
- obex_alpha_i
```bash
cargo run --release -p obex_alpha_i --example gen_golden_partrec
```
- obex_alpha_ii
```bash
cargo run --release -p obex_alpha_ii --example gen_golden_header
```
- Top-level examples (legacy; no root package – may not compile)
```bash
# legacy
cargo run --release --example ecvrf_verification
cargo run --release --example ecvrf_implementation
cargo run --release --example vrf_r255_api
```

### Tests by crate (integration + unit)
- tests_common (golden/freezing suites)
```bash
cargo test -p tests_common --release --test golden_partrec_frozen -- --nocapture
cargo test -p tests_common --release --test golden_header_v2_frozen -- --nocapture
cargo test -p tests_common --release --test three_slot_harness_frozen -- --nocapture
cargo test -p tests_common --release --test vrf_tai_vectors_frozen -- --nocapture
```
- obex_primitives
```bash
cargo test -p obex_primitives --release
# specific: kats / print_tags
cargo test -p obex_primitives --test kats --release -- --nocapture
cargo test -p obex_primitives --test print_tags --release -- --nocapture
```
- obex_alpha_i
```bash
cargo test -p obex_alpha_i --release --all-features
# specific files
cargo test -p obex_alpha_i --test golden_partrec --release --all-features -- --nocapture
cargo test -p obex_alpha_i --test golden --release --all-features -- --nocapture
cargo test -p obex_alpha_i --test gating --release --all-features -- --nocapture
cargo test -p obex_alpha_i --test vrf_kats --release --all-features -- --nocapture
cargo test -p obex_alpha_i --test vrf_rfc9381_tai --release --all-features -- --nocapture
cargo test -p obex_alpha_i --test vrf_rfc9381_len --release --all-features -- --nocapture
cargo test -p obex_alpha_i --test vrf_vectors --release --all-features -- --nocapture
cargo test -p obex_alpha_i --test dedup --release -- --nocapture
```
- obex_alpha_ii
```bash
cargo test -p obex_alpha_ii --release
# specific: E2E harnesses and goldens
cargo test -p obex_alpha_ii --test e2e_slots --release -- --nocapture
cargo test -p obex_alpha_ii --test e2e_three_slots --release -- --nocapture
cargo test -p obex_alpha_ii --test e2e --release -- --nocapture
cargo test -p obex_alpha_ii --test golden_header_bytes --release -- --nocapture
cargo test -p obex_alpha_ii --test golden_header --release -- --nocapture
cargo test -p obex_alpha_ii --test golden --release -- --nocapture
cargo test -p obex_alpha_ii --test gating --release -- --nocapture
cargo test -p obex_alpha_ii --test kat_dump --release -- --nocapture
```
- obex_alpha_iii
```bash
cargo test -p obex_alpha_iii --release
# specific
cargo test -p obex_alpha_iii --test fee_rule --release -- --nocapture
cargo test -p obex_alpha_iii --test admission --release -- --nocapture
cargo test -p obex_alpha_iii --test settlement --release -- --nocapture
cargo test -p obex_alpha_iii --test golden_roots --release -- --nocapture
cargo test -p obex_alpha_iii --test gating --release -- --nocapture
cargo test -p obex_alpha_iii --test kat_dump --release -- --nocapture
```
- obex_alpha_t
```bash
cargo test -p obex_alpha_t --release
# specific
cargo test -p obex_alpha_t --test golden --release -- --nocapture
cargo test -p obex_alpha_t --test emission --release -- --nocapture
cargo test -p obex_alpha_t --test gating --release -- --nocapture
```
- e2e
```bash
cargo test -p e2e --release -- --nocapture
```

### Benchmarks
- Build benches (workspace) without running
```bash
cargo bench --no-run
```
- Run benches (if present in member crates)
```bash
cargo bench --workspace
```

### Fuzz targets (cargo-fuzz)
- Prerequisites (once)
```bash
rustup toolchain install nightly
cargo install cargo-fuzz
```
- Build fuzzers
```bash
cd fuzz
cargo +nightly fuzz build
```
- Run fuzzers (short runs)
```bash
cd fuzz
cargo +nightly fuzz run registration_decode -- -runs=10000
cargo +nightly fuzz run registration_verify -- -runs=10000
```

### Handy selectors
```bash
# run a single test by name
cargo test -p obex_alpha_t emission_monotone_and_total_hits_supply_at_terminal -- --nocapture --exact
# run VRF vectors only
cargo test -p obex_alpha_i --test vrf_rfc9381_tai -- --nocapture
```
